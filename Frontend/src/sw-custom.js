// This file will be injected into the service worker generated by Vite

import { getAllPendingReports, deletePendingReport } from './services/db';

self.addEventListener('sync', (event) => {
  if (event.tag === 'sync-new-reports') {
    event.waitUntil(syncReports());
  }
});

async function syncReports() {
  const pendingReports = await getAllPendingReports();
  for (const report of pendingReports) {
    try {
      // Use fetch directly as we are in a service worker context
      const response = await fetch('http://localhost:8080/complaints', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          // Note: Auth token needs to be handled. A common strategy is to save it in IndexedDB as well.
          // For now, we assume the endpoint might work without auth for simplicity or we handle it later.
        },
        body: JSON.stringify(report),
      });

      if (response.ok) {
        console.log('Synced report:', report.id);
        await deletePendingReport(report.id);
      } else {
        console.error('Failed to sync report:', report.id, response);
      }
    } catch (error) {
      console.error('Error syncing report:', report.id, error);
    }
  }
}